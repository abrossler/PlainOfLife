{"ast":null,"code":"import { Board } from '../model/board';\nimport { SimpleCell } from '../model/cells/simple.cell';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"canvas\"];\n\nfunction LabComponent_option_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cell_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cell_r2.name);\n  }\n}\n\nexport let LabComponent = /*#__PURE__*/(() => {\n  class LabComponent {\n    constructor(ngZone) {\n      this.ngZone = ngZone;\n      this.canvas = null;\n      this.ctx = null;\n      this.boardSizeX = 1000;\n      this.boardSizeY = 400;\n      this.restartCellType = SimpleCell;\n      this.restart();\n    }\n\n    ngOnInit() {\n      if (this.canvas === null) {\n        return;\n      }\n\n      this.ctx = this.canvas.nativeElement.getContext('2d');\n      this.paint();\n    }\n\n    paint() {\n      if (this.ctx === null || !this.board) {\n        return;\n      }\n\n      const canvas = this.ctx.canvas;\n      let img = this.ctx.createImageData(this.boardSizeX, this.boardSizeY);\n      this.board.getImage(img.data);\n      this.ctx.putImageData(img, 20, 20); // Scaling\n      // https://stackoverflow.com/questions/3448347/how-to-scale-an-imagedata-in-html-canvas\n    }\n\n    start() {\n      console.log('LabComponent.start()');\n      this.ngZone.runOutsideAngular(() => {\n        var _a;\n\n        return (_a = this.board) === null || _a === void 0 ? void 0 : _a.start();\n      }); // Avoid running angular change detection for every new turn\n    }\n\n    stop() {\n      if (!this.board) {\n        return;\n      }\n\n      console.log('LabComponent.stop()');\n      this.board.stop();\n    }\n\n    step() {\n      if (!this.board) {\n        return;\n      }\n\n      console.log('LabComponent.step()');\n      this.board.step();\n    }\n\n    restart() {\n      var _a;\n\n      console.log('LabComponent.restart()');\n      (_a = this.board) === null || _a === void 0 ? void 0 : _a.stop();\n      console.log(this.restartCellType);\n      this.board = new Board();\n      this.board.init(this.boardSizeX, this.boardSizeY, this.restartCellType);\n      this.board.registerOnTurn(this);\n      this.paint();\n    }\n\n    onTurnExecuted(board) {\n      this.paint();\n    }\n\n    traceChangeDetection() {\n      console.log('Ping!');\n    }\n\n    getCellTypes() {\n      return [SimpleCell];\n    }\n\n    setRestartCellType(typeName) {\n      let type = this.getCellTypes().find(type => type.name === typeName);\n\n      if (type) {\n        this.restartCellType = type;\n      }\n    }\n\n  }\n\n  LabComponent.ɵfac = function LabComponent_Factory(t) {\n    return new (t || LabComponent)(i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  LabComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LabComponent,\n    selectors: [[\"lab-board\"]],\n    viewQuery: function LabComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    decls: 45,\n    vars: 2,\n    consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-light\", \"bg-light\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navbarSupportedContent\", \"aria-controls\", \"navbarSupportedContent\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarSupportedContent\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"mr-auto\"], [1, \"nav-item\", \"dropdown\"], [\"href\", \"#\", \"id\", \"navbarDropdown\", \"role\", \"button\", \"data-toggle\", \"dropdown\", \"aria-haspopup\", \"true\", \"aria-expanded\", \"false\", 1, \"nav-link\", \"dropdown-toggle\"], [\"aria-labelledby\", \"navbarDropdown\", 1, \"dropdown-menu\", \"bg-white\"], [1, \"dropdown-item\", 3, \"click\"], [\"data-toggle\", \"modal\", \"data-target\", \"#restartDialog\", 1, \"dropdown-item\"], [1, \"container-fluid\"], [1, \"row\"], [1, \"col\", \"bg-dark\", \"text-white\"], [\"width\", \"1000\", \"height\", \"800\"], [\"canvas\", \"\"], [\"id\", \"restartDialog\", \"tabindex\", \"-1\", \"role\", \"dialog\", \"aria-labelledby\", \"exampleModalLabel\", \"aria-hidden\", \"true\", 1, \"modal\", \"fade\"], [\"role\", \"document\", 1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"form-group\"], [1, \"form-control\", 3, \"change\"], [4, \"ngFor\", \"ngForOf\"], [1, \"modal-footer\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-secondary\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function LabComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0);\n        i0.ɵɵelementStart(1, \"div\");\n        i0.ɵɵelementStart(2, \"nav\", 0);\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵelement(4, \"span\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"ul\", 4);\n        i0.ɵɵelementStart(7, \"li\", 5);\n        i0.ɵɵelementStart(8, \"a\", 6);\n        i0.ɵɵtext(9, \" Board \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function LabComponent_Template_a_click_11_listener() {\n          return ctx.start();\n        });\n        i0.ɵɵtext(12, \"Run\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function LabComponent_Template_a_click_13_listener() {\n          return ctx.stop();\n        });\n        i0.ɵɵtext(14, \"Stop\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"a\", 8);\n        i0.ɵɵlistener(\"click\", function LabComponent_Template_a_click_15_listener() {\n          return ctx.step();\n        });\n        i0.ɵɵtext(16, \"Step\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"a\", 9);\n        i0.ɵɵtext(18, \"Restart ...\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 10);\n        i0.ɵɵelementStart(20, \"div\", 11);\n        i0.ɵɵelementStart(21, \"div\", 12);\n        i0.ɵɵelementStart(22, \"h1\");\n        i0.ɵɵtext(23, \"Game of Cells V0.0.1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"canvas\", 13, 14);\n        i0.ɵɵelementStart(26, \"div\", 15);\n        i0.ɵɵelementStart(27, \"div\", 16);\n        i0.ɵɵelementStart(28, \"div\", 17);\n        i0.ɵɵelementStart(29, \"div\", 18);\n        i0.ɵɵelementStart(30, \"h5\", 19);\n        i0.ɵɵtext(31, \"Restart Board\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 20);\n        i0.ɵɵelementStart(33, \"span\", 21);\n        i0.ɵɵtext(34, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 22);\n        i0.ɵɵtext(36, \" Select cell type: \");\n        i0.ɵɵelementStart(37, \"div\", 23);\n        i0.ɵɵelementStart(38, \"select\", 24);\n        i0.ɵɵlistener(\"change\", function LabComponent_Template_select_change_38_listener($event) {\n          return ctx.setRestartCellType($event.target.value);\n        });\n        i0.ɵɵtemplate(39, LabComponent_option_39_Template, 2, 1, \"option\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"div\", 26);\n        i0.ɵɵelementStart(41, \"button\", 27);\n        i0.ɵɵtext(42, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function LabComponent_Template_button_click_43_listener() {\n          return ctx.restart();\n        });\n        i0.ɵɵtext(44, \"Restart\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵtextInterpolate1(\"\", ctx.traceChangeDetection(), \"\\n\");\n        i0.ɵɵadvance(39);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getCellTypes());\n      }\n    },\n    directives: [i1.NgForOf],\n    encapsulation: 2\n  });\n  return LabComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}